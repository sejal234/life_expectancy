geom_image(aes(x=NY.GDP.PCAP.KD, y=SP.DYN.LE00.IN, image=img), size=.08)
+theme_minimal())
library("ggimage")
countries_of_interest <- c("India", "China", "United States",
"Indonesia", "Pakistan", "Nigeria", "Brazil",
"Bangladesh", "Japan", "Mexico") #10 highly populated countries
scatter <- df[df$Country.Name %in% countries_of_interest, ] #only want specific countries
table(scatter$Country.Name)
scatter = scatter[scatter$Indicator.Code %in% c("SP.DYN.LE00.IN", "NY.GDP.PCAP.KD"), ] #only want specific indicators
scatter = scatter %>%
pivot_wider(
id_cols = Country.Name,
names_from = Indicator.Code,
values_from = X2021)
scatter$img[scatter$Country.Name == "India"] = ".flags/india.png"
scatter$img[scatter$Country.Name == "China"] = ".flags/china.png"
scatter$img[scatter$Country.Name == "United States"] = ".flags/us.png"
scatter$img[scatter$Country.Name == "Indonesia"] = ".flags/indonesia.png"
scatter$img[scatter$Country.Name == "Pakistan"] = ".flags/pakistan.png"
scatter$img[scatter$Country.Name == "Nigeria"] = ".flags/nigeria.png"
scatter$img[scatter$Country.Name == "Brazil"] = ".flags/brazil.png"
scatter$img[scatter$Country.Name == "Bangladesh"] = "/Users/sejalgupta/gith/dsci_final/flags/bangladesh.png"
scatter$img[scatter$Country.Name == "Japan"] = ".flags/japan.png"
scatter$img[scatter$Country.Name == "Mexico"] = ".flags/mexico.png"
(ggplot(data=scatter)+ #scatterplot, instead of points it's images
geom_image(aes(x=NY.GDP.PCAP.KD, y=SP.DYN.LE00.IN, image=img), size=.08)
+theme_minimal())
library("ggimage")
countries_of_interest <- c("India", "China", "United States",
"Indonesia", "Pakistan", "Nigeria", "Brazil",
"Bangladesh", "Japan", "Mexico") #10 highly populated countries
scatter <- df[df$Country.Name %in% countries_of_interest, ] #only want specific countries
table(scatter$Country.Name)
scatter = scatter[scatter$Indicator.Code %in% c("SP.DYN.LE00.IN", "NY.GDP.PCAP.KD"), ] #only want specific indicators
scatter = scatter %>%
pivot_wider(
id_cols = Country.Name,
names_from = Indicator.Code,
values_from = X2021)
scatter$img[scatter$Country.Name == "India"] = "/Users/sejalgupta/gith/dsci_final/flags//india.png"
scatter$img[scatter$Country.Name == "China"] = "/Users/sejalgupta/gith/dsci_final/flags//china.png"
scatter$img[scatter$Country.Name == "United States"] = "/Users/sejalgupta/gith/dsci_final/flags//us.png"
scatter$img[scatter$Country.Name == "Indonesia"] = "/Users/sejalgupta/gith/dsci_final/flags//indonesia.png"
scatter$img[scatter$Country.Name == "Pakistan"] = "/Users/sejalgupta/gith/dsci_final/flags//pakistan.png"
scatter$img[scatter$Country.Name == "Nigeria"] = "/Users/sejalgupta/gith/dsci_final/flags//nigeria.png"
scatter$img[scatter$Country.Name == "Brazil"] = "/Users/sejalgupta/gith/dsci_final/flags//brazil.png"
scatter$img[scatter$Country.Name == "Bangladesh"] = "/Users/sejalgupta/gith/dsci_final/flags/bangladesh.png"
scatter$img[scatter$Country.Name == "Japan"] = "/Users/sejalgupta/gith/dsci_final/flags//japan.png"
scatter$img[scatter$Country.Name == "Mexico"] = "/Users/sejalgupta/gith/dsci_final/flags//mexico.png"
(ggplot(data=scatter)+ #scatterplot, instead of points it's images
geom_image(aes(x=NY.GDP.PCAP.KD, y=SP.DYN.LE00.IN, image=img), size=.08)
+theme_minimal())
(ggplot(data=scatter)+ #scatterplot, instead of points it's images
geom_image(aes(x=NY.GDP.PCAP.KD, y=SP.DYN.LE00.IN, image=img), size=.08)
+theme_minimal())
(ggplot(data=scatter)+ #scatterplot, instead of points it's images
geom_image(aes(x=NY.GDP.PCAP.KD, y=SP.DYN.LE00.IN, image=img), size=.08)+ #figure out if there's a way to make the flag have a border
#if i can't put a border on the flags, i'll need to color the background so u can see the flags
theme_minimal())+  #run this with the plot screen not minimized so that it doesn't shrink
labs(x= "GDP per Capita (US Dollars)", y="Life Expectancy (Years)",
title="something abt 2021 life expectancy corr w wealth",
subtitle = "something abt top ten most populated countries")
df_fil = df[complete.cases(df) | rowSums(is.na(df)) <= 60, ]
View(df_fil)
indic_list = c("SP.DYN.LE00.IN", #life expectancy
"NY.GDP.PCAP.KD", #gdp per capita
"SH.XPD.CHEX.GD.ZS", #Current health expenditure (% of GDP)
"SE.XPD.TOTL.GD.ZS", #Government expenditure on education, total (% of GDP)
"SP.POP.TOTL", #Population, total
"EN.POP.DNST", #Population density (people per sq. km of land area)
"SH.ALC.PCAP.LI", #Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)
"SH.PRV.SMOK", #Prevalence of current tobacco use (% of adults)
"SH.MED.PHYS.ZS", #Physicians (per 1,000 people)
"SH.STA.ODFC.ZS", #People practicing open defecation (% of population)
"SH.H2O.BASW.ZS", #People using at least basic drinking water services (% of population)
"SH.STA.BASS.ZS", #People using at least basic sanitation services (% of population)
"PV.EST" #Political Stability and Absence of Violence/Terrorism: Estimate
)
v3 = df[df$Indiactor.Code %in% indic_list, ]
View(v3)
v3 = df[df$Indicator.Code %in% indic_list, ]
v3_long = v3 %>%
gather(key = "Indicator_Code", value = "Value", -Country.Name, -Country.Code, -Indicator.Name) %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Year", value = "Value")
library(tidyverse)
v3_long = v3 %>%
gather(key = "Indicator_Code", value = "Value", -Country.Name, -Country.Code, -Indicator.Name) %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Year", value = "Value")
v3_long = v3 %>%
pivot_longer(cols = starts_with("20"), names_to = "Year", values_to = "Value") %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Year", value = "Value")
v3_long = v3 %>%
pivot_longer(cols = starts_with("x"), names_to = "Year", values_to = "Value") %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Year", value = "Value")
View(v3_long)
v3_long = v3 %>%
pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "Value") %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Year", value = "Value")
v3_long = v3 %>%
gather(key = "Year", value = "Value", -Country.Name, -Country.Code, -Indicator.Code, -Indicator.Name) %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Indicator.Code", value = "Value")
names = c(
"life_expectancy",  # Life expectancy
"gdp_per_capita",  # GDP per capita
"health_expenditure",  # Current health expenditure (% of GDP)
"educ_expenditure",  # Government expenditure on education, total (% of GDP)
"total_population",  # Population, total
"population_density",  # Population density (people per sq. km of land area)
"alc_consumption",  # Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)
"tobacco",  # Prevalence of current tobacco use (% of adults)
"physicians",  # Physicians (per 1,000 people)
"open_defect",  # People practicing open defecation (% of population)
"drinking_water",  # People using at least basic drinking water services (% of population)
"sanitation",  # People using at least basic sanitation services (% of population)
"political_stability"  # Political Stability and Absence of Violence/Terrorism: Estimate
)
v3_long = v3_long %>%
rename(
Country = Country.Name,
!!!setNames(names, indic_list)
)
v3_long = v3_long %>%
rename(
Country = Country.Name,
!!!setNames(indic_list, names)
)
v3_long = v3 %>%
gather(key = "Year", value = "Value", -Country.Name, -Country.Code, -Indicator.Code, -Indicator.Name) %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Indicator.Code", value = "Value")
names = c(
"life_expectancy",  # Life expectancy
"gdp_per_capita",  # GDP per capita
"health_expenditure",  # Current health expenditure (% of GDP)
"educ_expenditure",  # Government expenditure on education, total (% of GDP)
"total_population",  # Population, total
"population_density",  # Population density (people per sq. km of land area)
"alc_consumption",  # Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)
"tobacco",  # Prevalence of current tobacco use (% of adults)
"physicians",  # Physicians (per 1,000 people)
"open_defect",  # People practicing open defecation (% of population)
"drinking_water",  # People using at least basic drinking water services (% of population)
"sanitation",  # People using at least basic sanitation services (% of population)
"political_stability"  # Political Stability and Absence of Violence/Terrorism: Estimate
)
v3_long = v3_long %>%
rename(
Country = Country.Name,
!!!setNames(indic_list, names) #lets make sure these are actually right before proceeding
)
merge?
?merge
#VISUALIZATION 1
#examine life expectancy globally (create a map)
life_expectancy = subset(df, Indicator.Code == "SP.DYN.LE00.IN") #217 observations = 217 countries, data for most
#full countries shapefile
library(maps)
map.theme<-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
library(ggplot2)
map.theme<-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
rm(list=ls())
setwd("/Users/sejalgupta/gith/dsci_final")
data = read.csv("WDI_CSV/WDICSV.csv") #world development
#libraries
library(ggplot2)
#used in scatterplot vis (#2)
library(tidyr)
#library(ggimage)
#only want to keep countries after the "world" observation (everything above is regions)
last_world_row <- max(which(data$Country.Name == "World")) #72373
df <- data[(72374):nrow(data), ]
#df_fil = df[complete.cases(df) | rowSums(is.na(df)) <= 60, ] #just to easily look for what indicators countries have
#VISUALIZATION 1
#examine life expectancy globally (create a map)
life_expectancy = subset(df, Indicator.Code == "SP.DYN.LE00.IN") #217 observations = 217 countries, data for most
#full countries shapefile
library(maps)
map.theme<-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
library(sf)
world.map = st_read("WB_countries_Admin0_10m") #want to read the entire folder
head(world.map) #use column WB_NAME to join
world.map$Country.Name = world.map$WB_NAME
#life_expectancy$Country.Name
#map_df = join the world.map and life_expectancy dataframes, look at prof code
map_df = merge(world.map, life_expectancy, by='Country.Name')
View(map_df)
ggplot(data=map_df)+
geom_sf(aes(fill=X2021))+
map.theme+
labs(title="something abt findings", subtitle = "something abt 2021?", fill="Average Life Expectancy" )+
scale_fill_distiller(palette="YlOrRd", direction =1)
search()
plot(map_df$geometry, col = map_df$X2021,
main = "Your Title", key.title = "Average Life Expectancy",
key.header = "2021", key.columns = 1, key.footer = "Source: Your Source")
rm(list=ls())
setwd("/Users/sejalgupta/gith/dsci_final")
data = read.csv("WDI_CSV/WDICSV.csv") #world development
rm(list=ls())
setwd("/Users/sejalgupta/gith/dsci_final")
data = read.csv("WDI_CSV/WDICSV.csv") #world development
#libraries
library(ggplot2)
#used in scatterplot vis (#2)
library(tidyr)
#library(ggimage)
#only want to keep countries after the "world" observation (everything above is regions)
last_world_row <- max(which(data$Country.Name == "World")) #72373
df <- data[(72374):nrow(data), ]
#df_fil = df[complete.cases(df) | rowSums(is.na(df)) <= 60, ] #just to easily look for what indicators countries have
#VISUALIZATION 1
#examine life expectancy globally (create a map)
life_expectancy = subset(df, Indicator.Code == "SP.DYN.LE00.IN") #217 observations = 217 countries, data for most
#full countries shapefile
#library(maps)
map.theme<-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
library(sf)
world.map = st_read("WB_countries_Admin0_10m") #want to read the entire folder
head(world.map) #use column WB_NAME to join
world.map$Country.Name = world.map$WB_NAME
#life_expectancy$Country.Name
#map_df = join the world.map and life_expectancy dataframes, look at prof code
map_df = merge(world.map, life_expectancy, by='Country.Name')
ggplot(data=map_df) +
geom_sf(aes(fill=X2021)) +
map.theme+
labs(title="something abt findings", subtitle = "something abt 2021?", fill="Average Life Expectancy" )+
scale_fill_distiller(palette="YlOrRd", direction =1)
View(world.map)
world_df = st_read("WB_countries_Admin0_10m") #want to read the entire folder
head(world_df) #use column WB_NAME to join
world_df <- world_df %>%
mutate(WB_NAME = ifelse(WB_NAME == "United States of America", "United States", WB_NAME))
world_df = st_read("WB_countries_Admin0_10m") #want to read the entire folder
head(world_df) #use column WB_NAME to join
world_df$WB_NAME[world_df$WB_NAME == "United States of America"] <- "United States" #so they merge properly
world_df$Country.Name = world_df$WB_NAME #to join with life_expectancy$Country.Name
map_df = merge(world_df, life_expectancy, by='Country.Name')
ggplot(data=map_df) +
geom_sf(aes(fill=X2021)) +
map.theme+
labs(title="something abt findings", subtitle = "something abt 2021?", fill="Average Life Expectancy" )+
scale_fill_distiller(palette="YlOrRd", direction =1)
rm(list=ls())
setwd("/Users/sejalgupta/gith/dsci_final")
data = read.csv("WDI_CSV/WDICSV.csv") #world development
#libraries
library(ggplot2)
#used in scatterplot vis (#2)
library(tidyr)
#library(ggimage)
#only want to keep countries after the "world" observation (everything above is regions)
last_world_row <- max(which(data$Country.Name == "World")) #72373
df <- data[(72374):nrow(data), ]
#df_fil = df[complete.cases(df) | rowSums(is.na(df)) <= 60, ] #just to easily look for what indicators countries have
v3 = df[df$Indicator.Code %in% indic_list, ]
v3 = df[df$Indicator.Code %in% indic_list, ]
indic_list = c("SP.DYN.LE00.IN",
"NY.GDP.PCAP.KD",
"SH.XPD.CHEX.GD.ZS",
"SE.XPD.TOTL.GD.ZS",
"SP.POP.TOTL",
"EN.POP.DNST",
"SH.ALC.PCAP.LI",
"SH.PRV.SMOK",
"SH.MED.PHYS.ZS",
"SH.STA.ODFC.ZS",
"SH.H2O.BASW.ZS",
"SH.STA.BASS.ZS",
"PV.EST")
#subsetting the df to make it easier to see what years are missing data
v3 = df[df$Indicator.Code %in% indic_list, ]
View(v3)
library(tidyverse)
v3_long = v3 %>%
gather(key = "Year", value = "Value", -Country.Name, -Country.Code, -Indicator.Code, -Indicator.Name) %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Indicator.Code", value = "Value")
names = c(
"life_expectancy",  # Life expectancy
"gdp_per_capita",  # GDP per capita
"health_expenditure",  # Current health expenditure (% of GDP)
"educ_expenditure",  # Government expenditure on education, total (% of GDP)
"total_population",  # Population, total
"population_density",  # Population density (people per sq. km of land area)
"alc_consumption",  # Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)
"tobacco",  # Prevalence of current tobacco use (% of adults)
"physicians",  # Physicians (per 1,000 people)
"open_defect",  # People practicing open defecation (% of population)
"drinking_water",  # People using at least basic drinking water services (% of population)
"sanitation",  # People using at least basic sanitation services (% of population)
"political_stability"  # Political Stability and Absence of Violence/Terrorism: Estimate
)
v3_long = v3_long %>%
rename(
Country = Country.Name,
!!!setNames(indic_list, names) #lets make sure this worked properly
)
#now need to write the regression
regressors = (gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability)
View(v3_long)
v3_long = v3 %>%
gather(key = "Year", value = "Value", -Country.Name, -Country.Code, -Indicator.Code, -Indicator.Name) %>%
select(-Country.Code, -Indicator.Name) %>%
spread(key = "Indicator.Code", value = "Value")
names = c(
"life_expectancy",  # Life expectancy
"gdp_per_capita",  # GDP per capita
"health_expenditure",  # Current health expenditure (% of GDP)
"educ_expenditure",  # Government expenditure on education, total (% of GDP)
"total_population",  # Population, total
"population_density",  # Population density (people per sq. km of land area)
"alc_consumption",  # Total alcohol consumption per capita (liters of pure alcohol, projected estimates, 15+ years of age)
"tobacco",  # Prevalence of current tobacco use (% of adults)
"physicians",  # Physicians (per 1,000 people)
"open_defect",  # People practicing open defecation (% of population)
"drinking_water",  # People using at least basic drinking water services (% of population)
"sanitation",  # People using at least basic sanitation services (% of population)
"political_stability"  # Political Stability and Absence of Violence/Terrorism: Estimate
)
v3_dataset = v3_long %>%
rename(
Country = Country.Name,
!!!setNames(indic_list, names) #lets make sure this worked properly
)
View(v3_long)
View(v3_dataset)
model = lm(life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset)
summary(model)
model= plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, model = "within", index = c("Year"))
library(plm)
model= plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(model) #352 degrees of freedom, (13306 observations deleted due to missingness)
model= plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, index = c("Year"), model = "random")
v3_dataset$Year <- as.numeric(sub("X", "", v3_dataset$Year))
model= plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, index = c("Year"), model = "random")
model= plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(model)
model
colSums(is.na(v3_dataset))
v3_dataset <- v3_dataset[complete.cases(v3_dataset$gdp_per_capita, v3_dataset$life_expectancy), ]
colSums(is.na(v3_dataset))
model2 = plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(model2)
View(model)
View(model2)
colldiag(model2)
vif(model2)
library(car)
vif(model2)
print(vif(model2))
print(car::vif(model2))
simple = plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(simple)
v3_dataset = v3_long %>%
rename(
Country = Country.Name,
!!!setNames(indic_list, names) #this works properly, we just do this to clean the names
)
v3_dataset$Year <- as.numeric(sub("X", "", v3_dataset$Year))
simple = plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + population_density + physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(simple)
model2 = plm(formula = life_expectancy ~ gdp_per_capita + health_expenditure +
educ_expenditure + total_population +
population_density + alc_consumption +
tobacco + physicians + open_defect +
drinking_water + sanitation + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(model2)
simple = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density
+ drinking_water
+ physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(simple)
simple = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density + total_population
+ drinking_water
+ physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(simple)
simple = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density
+ drinking_water
+ alc_consumption + tobacco
+ physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(simple)
#+ total_population  makes the model bug
simple = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density
+ drinking_water + open_defect
+ alc_consumption + tobacco + sanitation
+ physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within")
summary(simple)
#including total_population  makes the model bug
v3_dataset_full <- v3_dataset[complete.cases(v3_dataset$gdp_per_capita, v3_dataset$life_expectancy), ]
simple = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density
+ drinking_water + open_defect + sanitation
+ alc_consumption + tobacco
+ physicians + political_stability,
data = v3_dataset_full, index = c("Year"), model = "within")
summary(simple)
simple = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density + total_population
+ drinking_water + open_defect + sanitation
+ alc_consumption + tobacco
+ physicians + political_stability,
data = v3_dataset_full, index = c("Year"), model = "within")
summary(simple)
model = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density   #including total_population  makes the model bug
+ drinking_water + open_defect + sanitation
+ alc_consumption + tobacco
+ physicians + political_stability,
data = v3_dataset, index = c("Year"), model = "within") #is it better to run with the full version?
summary(model)
v3_dataset_cropped <- v3_dataset[complete.cases(v3_dataset$gdp_per_capita, v3_dataset$life_expectancy), ]
#colSums(is.na(v3_dataset_cropped)) #removed the observations w/o life expectancy or gdp per capita
model_cropped = plm(formula = life_expectancy ~ gdp_per_capita
+ health_expenditure + educ_expenditure
+ population_density
+ drinking_water + open_defect + sanitation
+ alc_consumption + tobacco
+ physicians + political_stability,
data = v3_dataset_cropped, index = c("Year"), model = "within")
summary(model_cropped)
View(v3_dataset_full)
View(v3_dataset_cropped)
